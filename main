from flask import Flask
from flask_restful import Api, Resource, reqparse
import os
import sqlite3
import random
app = Flask(__name__)
api = Api(app)

BASE_DIR = os.path.dirname(os.path.abspath(__file__))
db_path = os.path.join(BASE_DIR, "test_work.sqlite")
con = sqlite3.connect(db_path)
cur = con.cursor()

#lessons = list(f'select id_lesson from views where id_user={id}')

class user_data(Resource):
    def get(self, id):
        data = cur.execute(f'select viewing_time, viewed/not from views where id_user={id}')
        return data, 200
        return "Not found", 404

class user_lessondata(Resource):
    def get(self, id_user, id_product):
        lessons = list(cur.execute(f'select id from lessons where product={id_product}'))
        data = []
        for lesson in lessons:
            data.extand(list(cur.execute(f'select viewing_time, viewed/not, date from views where id_user={id_user} and id_lesson={lesson}')))
        return data, 200
        return "Not found", 404

class statistics(Resource):
    def get(self):
        products = list(f'select id from products')
        for product in products:
            lessons = list(cur.execute(f'select id from lessons where product={product}'))
            data_lessons = dict.fromkeys(lessons)
            for lesson in lessons:
                data_lessons[lesson] = cur.execute(f'select count(id_user), sum(viewing_time) from views where id_lesson={lesson}')
                count_users = len(set(cur.execute(f'select distinct id_user from views where id_lesson={lesson} ')))
                users = cur.execute('select count(id) from users')[0][0]
                purchases = count_users / users * 100
        data = {'lessons_info': data_lessons, 'count_users': count_users, 'purchases': purchases}

        return "Not found", 404
